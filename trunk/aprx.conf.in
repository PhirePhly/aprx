#
# Simple sample configuration file for the APRX-2  -- an APRS iGate and Digipeater
#
# This configuration is structured with Apache HTTPD style tags
# which then contain subsystem parameters.
#

#
# For simple case, you need to adjust 4 things:
#   - Mycall parameter
#   - Select correct type of interface (ax25-device or serial-device)
#   - Optionally set a beacon telling where this system is
#   - Optionally enable digipeater with or without tx-igate
#

#
#
# Define the parameters in following order:
#   1)  <aprsis>     ** zero or one
#   2)  <logging>    ** zero or one
#   3)  <interface>  ** there can be multiple!
#   4)  <beacon>     ** zero to many
#   5)  <digipeater> ** zero to many (at most one for each Tx)
#

#
# Global macro for simplified callsign definition:
# Usable for 99+% of cases.
#

mycall  N0CALL-1

<aprsis>
# The  aprsis login  parameter: 
# Station callsignSSID used for relaying APRS frames into APRS-IS.
#
#login     $mycall	# login defaults to $mycall

# APRS-IS server name and portnumber.
# Every reconnect does re\-resolve the name to IP address.
# There can be as many definitions as you want, and they will be
# used in round\-robin fashion.  Heartbeat and filter definitions
# must follow each server definition.

server    rotate.aprs.net    14580

# Some APRS-IS servers tell every about 20 seconds to all contact
# ports that they are there and alive. Others are just silent.
# Enable only if the server you use does present heartbeat.
# Default value is 3*"heartbeat" + some  -> 120 (seconds)
#
#heartbeat-timeout   0    # Disabler in case your server does not do heartbeat

# APRS-IS server may support some filter commands.
# See:  http://www.aprs-is.net/javAPRSFilter.aspx
#
#filter "possibly multiple filter specs in quotes"
#
#filter "m/100"	     # My-Range filter: positions within 100 km from my location
#filter "m/100 f/OH2XYZ-3/50"  # 100 km of my location, or 50 km of friend's

</aprsis>

<logging>

# pidfile is UNIX way to tell that others that this program is
# running with given process-id number.  This has compiled-in
# default value of:  pidfile @VARRUN@/aprx.pid
#
pidfile @VARRUN@/aprx.pid


# rflog defines a rotatable file into which all RF-received packets
# are logged.
#
rflog @VARLOG@/rf.log

# aprxlog defines a rotatable file into which most important 
# events on APRS-IS connection are logged, namely connects and
# disconnects.
#
aprxlog @VARLOG@/aprx.log

# erlangfile defines a mmap():able binary file, which stores
# running sums of interfaces upon which the channel erlang
# estimator runs, and collects data.
# Depending on the system, it may be running on a filesystem
# that actually retains data over reboots, or it may not.
# With this backing store, the system does not loose cumulating
# erlang data over the current period, if the restart is quick,
# and does not stradle any exact minute.
# (Do restarts at 15 seconds over an even minute..)
# This file is around 0.5 MB per each interface talking APRS.
# Things go BADLY WRONG if this file can not be created or
# it is corrupted!
#
# Built-in default value is: @VARRUN@/aprx.state
#
erlangfile @VARRUN@/aprx.state

</logging>


# ***********  Multiple <interface> definitions can follow   *********

# ax25-device  Lists AX.25 ports by their callsigns that in Linux
#              systems receive APRS packets.  If none are defined,
#              or the system is not Linux, the AX.25 network receiver
#              is not enabled.
#
# tx-ok        Boolean telling if this device is able to transmit.
#
#<interface>
#   ax25-device $mycall
#   #tx-ok      false  # transmitter enable defaults to false
#</interface>

# The  TNC serial  options.  Parameters are:
#   - /dev/ttyUSB1    -- tty device
#   - 19200           -- baud rate, supported ones are:
#                        1200, 2400, 4800, 9600, 19200, 38400
#   - 8n1             -- 8-bits, no parity, one stop-bit,
#                        no other supported modes
#   - "KISS"                  - plain basic KISS mode
#   - "XORSUM" alias "BPQCRC" - KISS with BPQ "CRC" byte
#   - "SMACK"  alias "CRC16"  - KISS with real CRC
#   - "TNC2"                  - TNC2 monitor format
#
#<interface>
#   serial-device /dev/ttyUSB0  19200 8n1    KISS
#   #callsign     $mycall  # callsign defaults to $mycall
#   #tx-ok        false    # transmitter enable defaults to false
#</interface>
#
#<interface>
#   serial-device /dev/ttyUSB1  19200 8n1    TNC2
#   #callsign     $mycall  # callsign defaults to $mycall
#   #tx-ok        false    # TNC2 monitor can not have transmitter
#</interface>
#


# ***********  Multiple <beacon>  definitions can follow   *********
<beacon>
#
#  Beacons are sent out to radio transmitters AND to APRSIS.
#  They are sent to all transmitters that have "tx-ok true" setting
#  if no "to" entry is defined, and only to defined transmitter, if
#  the "to" entry is defined.  The "for" subfield defaults to "$mycall".
#
#beacon to N0CALL-3 for N0CALL-3 raw "!6016.30NR02506.36E&aprx - an Rx-only iGate"
#beacon to $mycall  symbol "R&" lat "6016.30N" lon "02506.36E" comment "aprx - an Rx-only iGate"
#
</beacon>


# ***********  <digipeater>  definition(s) follow   *********
#
#  The digipeater definitions tell transmitters that receive
#  AX.25 packets from possibly multiple sources, and then what
#  to do on the AX.25 headers of those messages.
#
#  There is one transmitter per digipeater -- and inversely, there
#  can be at most one digipeater for each transmitter.
#
#  In each digipeater there is at least one <source>, usually same
#  as the transmitter.
#
#<digipeater>
#    transmitter     $mycall
#    #ratelimit      120      # default: max 120 packets/minute

#    <source>
#        source         $mycall
#    #   viscous-delay  0     # no viscous delay for RF->RF digipeating
#    #   ratelimit      120   # default: max 120 packets/minute
#    #   filter     "..."     # Optional filters to limit digipeated messages
#    </source>
#    #<source>                # Adding APRSIS source makes this tx-igate
#    #    source        APRSIS
#    #    # %%%% additional tx-igate options to be defined %%%%
#    #    #  (like relay-format controls, APRSIS->RF in 3rd-party form)
#    #    viscous-delay 5     # Recommendation, wait 5 sec before tx:in
#    #   filter     "..."     # Optional filters to limit gated messages
#    #</source>
#
#</digipeater>
