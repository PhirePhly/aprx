
		APRX    v0.10

A receive-only APRS-IS "i-gate" with following properties:

   Config file (-f option) default is:  /etc/aprx.conf
   Other runtime options are: -v,  -d,  -h/-?  (verbout, debug and help)

   - Is receive-only  (future may, or may not, have Rx/Tx behaviour)

   - Can receive data from multiple receivers/modems on local machine
     serial ports

   - Understands on serial ports:
       - several KISS protocol variants, plain basic KISS preferred
       - TNC2 debug style text  (incomplete)
       - and even AEA "monitor 1" format (incomplete)

   - Connects with one  callsign-ssid  pair to APRS-IS core for all
     received radio ports

   - Knows that messages with following tokens in VIA fields of the
     path are not to be relayed into network:
              RFONLY, NOGATE, TCPIP, TCPXX

   - Knows that following source address prefixes are bogus and thus
     to be junked:
              WIDE, RELAY, TRACE, TCPIP, TCPXX, NOCALL, N0CALL


   - Does not require machine to have AX.25 protocol support internally!

   - On Linux machine with kernel internal AX.25 protocol support, does
     listen on internal AX.25 network in promiscuous form, and requires
     to be running as root to do that.   Does not fail to start in case
     the port fails to open (running as non-root.)   Does not filter
     reported AX.25 UI frames by AX.25 interface ports or anything.
     (Such filter is on TODO list.)

   - Built-in "erlang-monitor" actually counts bytes per time interval
     (10 min, and 60 min)  on each receiving interface, including all
     that feed internal AX.25 network.  Report goes to SYSLOG, unless
     option "-e" is used, then it goes to STDOUT.

   - The "erlang-monitor" presumes that system internal time is on sync with
     the UTC, as is the style in UNIX systems, and makes those reports at
     exact 1 minute,  10 minutes and exact 60 minutes, cycle depending.

   - The "erlang-monitor" runs always, and stores data on backing-store
     file  /tmp/aprx-erlang.dat,  which is mmap()able/read()able to
     a program for analysis by:
          - SNMP polling
          - preanalyzed 1m, 10m, and 60m round-robin arrays
     File is created if a) it does not exist, or b) its "magic" value is wrong.
     Tool to extract it is at present on TODO list...

   - Auxiliary utility  aprx-stat  to pull statistics data out of the
     shared memory segment


   - The netbeacons are distributed timewise more evenly around the interval,
     and even the interval length is varied at random in between 20 and 30
     minutes.  Number of netbeacons are unlimited, but their minimum transmit
     interval is 3 seconds making the amount of beacons sendable in 20 minutes
     to be: 20*60/3 = 400.  All will be sent, but the cycle will just take
     longer.


by Matti Aarnio - OH2MQK - oh2mqk-at-sral-fi - 2007
